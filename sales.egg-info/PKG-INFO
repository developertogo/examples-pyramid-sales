Metadata-Version: 1.1
Name: sales
Version: 1.0
Summary: sales
Home-page: UNKNOWN
Author: UNKNOWN
Author-email: UNKNOWN
License: UNKNOWN
Description: examples-python-pyramid-sales
        =============================
        
        d3.js linear graph of 'Sales over Month' data fetched from a web server running Pyramid with SQLAlchemy ORM connected to a PostgreSQL DB.
        
        Go to: http://pyramid-sales.herokuapp.com/ to see the app in action.
        
        Sales over Month App - README
        =============================
        
        Objective
        ---------
        
        Demonstrate understanding of the in/out's workings of the Python Pyrarmid Web Framework with SQLAlchemy.
        
        Project
        -------
        
        Display a linear graph of sales over time (y-axis is $, x-axis is month).
        Create dummy/static data, but load the data via an ajax call.
        
        Strategy
        --------
        
        *   Select an elegant front end graphic library, d3.js
        *   Data is randomly auto-generated and stored in the DB
        *   Data is fetched via an ajax call, e.g. http://pyramid-sales.herokuapp.com/sales_month, 
            to select the data from DB and pass to the front end for display
        *   Unit test the workflow
        *   Setup Pyramid directory structure for models and views so that new functionality is easily added
        *   Select Mako templating for its inherintance features
        *   Deploy app to Heroku with a Postgres Add-on
        
        Getting Started
        ---------------
        
        *   git clone or download it to your local system.
        
        *   install & setup postgresql
           
                On Ubuntu, you do (use the equivalent cmd in your linux env):
                    sudo apt-get install postgresql
            
                Basic setup (create user: root with password: root and database: sales)
                    sudo -u postgres createuser root
                    sudo -u postgres psql
                    postgres=# \password root
                    sudo -u postgres createdb -O root sales
        
        Note: $venv is 'your virtual env'
        
        *   cd 'directory_to_this_app'
        
        *   install require packages
          
                $venv/bin/python setup.py develop
        
        *   initialize the db creating a 'sales_month' table if it does not exist and inserting random values
            
                $venv/bin/initialize_sales_db development.ini
        
        *   run the unitest
            
                $venv/bin/python setup.py test -q
        
        *   start app
            
                $venv/bin/pserve development.ini
        
        Using d3.js to fetch the data via an ajax call and display the sales-month line graph.
        
        
        0.0
        ---
        - Initial version
        
        * Created from Pyramid 'alchemy' scaffold default which uses URL mapping via URL dispatch and persistence via SQLAlchemy
        
        1.0
        ---
        - Add a 'Sales Month' linear graph 
        
        * Use d3.js for the graph which does an ajax call to fetch the data from the DB with SQLAlchemy.
        * Created models and views directories to have separate files for each model and view keeping them modular.
        
Keywords: web wsgi bfg pylons pyramid
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Framework :: Pyramid
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
